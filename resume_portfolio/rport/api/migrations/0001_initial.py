# Generated by Django 4.2 on 2023-07-04 00:34

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogAccessories",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                ("type", models.TextField(blank=True, db_column="Type", null=True)),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_accessories",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogAchievements",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "award_criteria",
                    models.TextField(blank=True, db_column="Award Criteria", null=True),
                ),
                (
                    "field_field",
                    models.BigIntegerField(blank=True, db_column="#", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "internal_name",
                    models.TextField(blank=True, db_column="Internal Name", null=True),
                ),
                (
                    "internal_category",
                    models.TextField(
                        blank=True, db_column="Internal Category", null=True
                    ),
                ),
                (
                    "num_of_tiers",
                    models.BigIntegerField(
                        blank=True, db_column="Num of Tiers", null=True
                    ),
                ),
                (
                    "tier_1",
                    models.BigIntegerField(blank=True, db_column="Tier 1", null=True),
                ),
                (
                    "tier_2",
                    models.BigIntegerField(blank=True, db_column="Tier 2", null=True),
                ),
                (
                    "tier_3",
                    models.BigIntegerField(blank=True, db_column="Tier 3", null=True),
                ),
                (
                    "tier_4",
                    models.BigIntegerField(blank=True, db_column="Tier 4", null=True),
                ),
                (
                    "tier_5",
                    models.BigIntegerField(blank=True, db_column="Tier 5", null=True),
                ),
                (
                    "reward_tier_1",
                    models.BigIntegerField(
                        blank=True, db_column="Reward Tier 1", null=True
                    ),
                ),
                (
                    "reward_tier_2",
                    models.BigIntegerField(
                        blank=True, db_column="Reward Tier 2", null=True
                    ),
                ),
                (
                    "reward_tier_3",
                    models.BigIntegerField(
                        blank=True, db_column="Reward Tier 3", null=True
                    ),
                ),
                (
                    "reward_tier_4",
                    models.BigIntegerField(
                        blank=True, db_column="Reward Tier 4", null=True
                    ),
                ),
                (
                    "reward_tier_5",
                    models.BigIntegerField(
                        blank=True, db_column="Reward Tier 5", null=True
                    ),
                ),
                (
                    "reward_tier_6",
                    models.BigIntegerField(
                        blank=True, db_column="Reward Tier 6", null=True
                    ),
                ),
                (
                    "sequential",
                    models.TextField(blank=True, db_column="Sequential", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_achievements",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogArt",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "genuine",
                    models.TextField(blank=True, db_column="Genuine", null=True),
                ),
                (
                    "category",
                    models.TextField(blank=True, db_column="Category", null=True),
                ),
                ("buy", models.BigIntegerField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "real_artwork_title",
                    models.TextField(
                        blank=True, db_column="Real Artwork Title", null=True
                    ),
                ),
                ("artist", models.TextField(blank=True, db_column="Artist", null=True)),
                (
                    "museum_description",
                    models.TextField(
                        blank=True, db_column="Museum Description", null=True
                    ),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                (
                    "hha_set",
                    models.TextField(blank=True, db_column="HHA Set", null=True),
                ),
                (
                    "interact",
                    models.TextField(blank=True, db_column="Interact", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "speaker_type",
                    models.TextField(blank=True, db_column="Speaker Type", null=True),
                ),
                (
                    "lighting_type",
                    models.TextField(blank=True, db_column="Lighting Type", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_art",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogBags",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_bags",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogBottoms",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_bottoms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogConstruction",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("buy", models.BigIntegerField(blank=True, db_column="Buy", null=True)),
                (
                    "category",
                    models.TextField(blank=True, db_column="Category", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_construction",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogDressUp",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "primary_shape",
                    models.TextField(blank=True, db_column="Primary Shape", null=True),
                ),
                (
                    "secondary_shape",
                    models.TextField(
                        blank=True, db_column="Secondary Shape", null=True
                    ),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_dress-up",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogFencing",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "stack_size",
                    models.BigIntegerField(
                        blank=True, db_column="Stack Size", null=True
                    ),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_fencing",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogFish",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                (
                    "field_field",
                    models.BigIntegerField(blank=True, db_column="#", null=True),
                ),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "where_how",
                    models.TextField(blank=True, db_column="Where/How", null=True),
                ),
                ("shadow", models.TextField(blank=True, db_column="Shadow", null=True)),
                (
                    "total_catches_to_unlock",
                    models.BigIntegerField(
                        blank=True, db_column="Total Catches to Unlock", null=True
                    ),
                ),
                (
                    "spawn_rates",
                    models.TextField(blank=True, db_column="Spawn Rates", null=True),
                ),
                (
                    "rain_snow_catch_up",
                    models.TextField(
                        blank=True, db_column="Rain/Snow Catch Up", null=True
                    ),
                ),
                ("nh_jan", models.TextField(blank=True, db_column="NH Jan", null=True)),
                ("nh_feb", models.TextField(blank=True, db_column="NH Feb", null=True)),
                ("nh_mar", models.TextField(blank=True, db_column="NH Mar", null=True)),
                ("nh_apr", models.TextField(blank=True, db_column="NH Apr", null=True)),
                ("nh_may", models.TextField(blank=True, db_column="NH May", null=True)),
                ("nh_jun", models.TextField(blank=True, db_column="NH Jun", null=True)),
                ("nh_jul", models.TextField(blank=True, db_column="NH Jul", null=True)),
                ("nh_aug", models.TextField(blank=True, db_column="NH Aug", null=True)),
                ("nh_sep", models.TextField(blank=True, db_column="NH Sep", null=True)),
                ("nh_oct", models.TextField(blank=True, db_column="NH Oct", null=True)),
                ("nh_nov", models.TextField(blank=True, db_column="NH Nov", null=True)),
                ("nh_dec", models.TextField(blank=True, db_column="NH Dec", null=True)),
                ("sh_jan", models.TextField(blank=True, db_column="SH Jan", null=True)),
                ("sh_feb", models.TextField(blank=True, db_column="SH Feb", null=True)),
                ("sh_mar", models.TextField(blank=True, db_column="SH Mar", null=True)),
                ("sh_apr", models.TextField(blank=True, db_column="SH Apr", null=True)),
                ("sh_may", models.TextField(blank=True, db_column="SH May", null=True)),
                ("sh_jun", models.TextField(blank=True, db_column="SH Jun", null=True)),
                ("sh_jul", models.TextField(blank=True, db_column="SH Jul", null=True)),
                ("sh_aug", models.TextField(blank=True, db_column="SH Aug", null=True)),
                ("sh_sep", models.TextField(blank=True, db_column="SH Sep", null=True)),
                ("sh_oct", models.TextField(blank=True, db_column="SH Oct", null=True)),
                ("sh_nov", models.TextField(blank=True, db_column="SH Nov", null=True)),
                ("sh_dec", models.TextField(blank=True, db_column="SH Dec", null=True)),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "lighting_type",
                    models.TextField(blank=True, db_column="Lighting Type", null=True),
                ),
                (
                    "icon_filename",
                    models.TextField(blank=True, db_column="Icon Filename", null=True),
                ),
                (
                    "critterpedia_filename",
                    models.TextField(
                        blank=True, db_column="Critterpedia Filename", null=True
                    ),
                ),
                (
                    "furniture_filename",
                    models.TextField(
                        blank=True, db_column="Furniture Filename", null=True
                    ),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_fish",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogFloors",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("vfx", models.TextField(blank=True, db_column="VFX", null=True)),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_floors",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogFossils",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                ("museum", models.TextField(blank=True, db_column="Museum", null=True)),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "interact",
                    models.TextField(blank=True, db_column="Interact", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_fossils",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogHeadwear",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                ("type", models.TextField(blank=True, db_column="Type", null=True)),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_headwear",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogHousewares",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                (
                    "body_title",
                    models.TextField(blank=True, db_column="Body Title", null=True),
                ),
                (
                    "pattern",
                    models.TextField(blank=True, db_column="Pattern", null=True),
                ),
                (
                    "pattern_title",
                    models.TextField(blank=True, db_column="Pattern Title", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "body_customize",
                    models.TextField(blank=True, db_column="Body Customize", null=True),
                ),
                (
                    "pattern_customize",
                    models.TextField(
                        blank=True, db_column="Pattern Customize", null=True
                    ),
                ),
                (
                    "kit_cost",
                    models.TextField(blank=True, db_column="Kit Cost", null=True),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                (
                    "hha_set",
                    models.TextField(blank=True, db_column="HHA Set", null=True),
                ),
                (
                    "interact",
                    models.TextField(blank=True, db_column="Interact", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "outdoor",
                    models.TextField(blank=True, db_column="Outdoor", null=True),
                ),
                (
                    "speaker_type",
                    models.TextField(blank=True, db_column="Speaker Type", null=True),
                ),
                (
                    "lighting_type",
                    models.TextField(blank=True, db_column="Lighting Type", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "variant_id",
                    models.TextField(blank=True, db_column="Variant ID", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_housewares",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogInsects",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                (
                    "field_field",
                    models.BigIntegerField(blank=True, db_column="#", null=True),
                ),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "where_how",
                    models.TextField(blank=True, db_column="Where/How", null=True),
                ),
                (
                    "weather",
                    models.TextField(blank=True, db_column="Weather", null=True),
                ),
                (
                    "total_catches_to_unlock",
                    models.BigIntegerField(
                        blank=True, db_column="Total Catches to Unlock", null=True
                    ),
                ),
                (
                    "spawn_rates",
                    models.TextField(blank=True, db_column="Spawn Rates", null=True),
                ),
                ("nh_jan", models.TextField(blank=True, db_column="NH Jan", null=True)),
                ("nh_feb", models.TextField(blank=True, db_column="NH Feb", null=True)),
                ("nh_mar", models.TextField(blank=True, db_column="NH Mar", null=True)),
                ("nh_apr", models.TextField(blank=True, db_column="NH Apr", null=True)),
                ("nh_may", models.TextField(blank=True, db_column="NH May", null=True)),
                ("nh_jun", models.TextField(blank=True, db_column="NH Jun", null=True)),
                ("nh_jul", models.TextField(blank=True, db_column="NH Jul", null=True)),
                ("nh_aug", models.TextField(blank=True, db_column="NH Aug", null=True)),
                ("nh_sep", models.TextField(blank=True, db_column="NH Sep", null=True)),
                ("nh_oct", models.TextField(blank=True, db_column="NH Oct", null=True)),
                ("nh_nov", models.TextField(blank=True, db_column="NH Nov", null=True)),
                ("nh_dec", models.TextField(blank=True, db_column="NH Dec", null=True)),
                ("sh_jan", models.TextField(blank=True, db_column="SH Jan", null=True)),
                ("sh_feb", models.TextField(blank=True, db_column="SH Feb", null=True)),
                ("sh_mar", models.TextField(blank=True, db_column="SH Mar", null=True)),
                ("sh_apr", models.TextField(blank=True, db_column="SH Apr", null=True)),
                ("sh_may", models.TextField(blank=True, db_column="SH May", null=True)),
                ("sh_jun", models.TextField(blank=True, db_column="SH Jun", null=True)),
                ("sh_jul", models.TextField(blank=True, db_column="SH Jul", null=True)),
                ("sh_aug", models.TextField(blank=True, db_column="SH Aug", null=True)),
                ("sh_sep", models.TextField(blank=True, db_column="SH Sep", null=True)),
                ("sh_oct", models.TextField(blank=True, db_column="SH Oct", null=True)),
                ("sh_nov", models.TextField(blank=True, db_column="SH Nov", null=True)),
                ("sh_dec", models.TextField(blank=True, db_column="SH Dec", null=True)),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                (
                    "icon_filename",
                    models.TextField(blank=True, db_column="Icon Filename", null=True),
                ),
                (
                    "critterpedia_filename",
                    models.TextField(
                        blank=True, db_column="Critterpedia Filename", null=True
                    ),
                ),
                (
                    "furniture_filename",
                    models.TextField(
                        blank=True, db_column="Furniture Filename", null=True
                    ),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_insects",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogMiscellaneous",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                (
                    "body_title",
                    models.TextField(blank=True, db_column="Body Title", null=True),
                ),
                (
                    "pattern",
                    models.TextField(blank=True, db_column="Pattern", null=True),
                ),
                (
                    "pattern_title",
                    models.TextField(blank=True, db_column="Pattern Title", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "body_customize",
                    models.TextField(blank=True, db_column="Body Customize", null=True),
                ),
                (
                    "pattern_customize",
                    models.TextField(
                        blank=True, db_column="Pattern Customize", null=True
                    ),
                ),
                (
                    "kit_cost",
                    models.TextField(blank=True, db_column="Kit Cost", null=True),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                (
                    "hha_set",
                    models.TextField(blank=True, db_column="HHA Set", null=True),
                ),
                (
                    "interact",
                    models.TextField(blank=True, db_column="Interact", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "outdoor",
                    models.TextField(blank=True, db_column="Outdoor", null=True),
                ),
                (
                    "speaker_type",
                    models.TextField(blank=True, db_column="Speaker Type", null=True),
                ),
                (
                    "lighting_type",
                    models.TextField(blank=True, db_column="Lighting Type", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "variant_id",
                    models.TextField(blank=True, db_column="Variant ID", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_miscellaneous",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogMusic",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_music",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogOther",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "stack_size",
                    models.BigIntegerField(
                        blank=True, db_column="Stack Size", null=True
                    ),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                ("sell", models.TextField(blank=True, db_column="Sell", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_other",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogPhotos",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                (
                    "body_title",
                    models.TextField(blank=True, db_column="Body Title", null=True),
                ),
                (
                    "pattern",
                    models.TextField(blank=True, db_column="Pattern", null=True),
                ),
                (
                    "pattern_title",
                    models.TextField(blank=True, db_column="Pattern Title", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "customize",
                    models.TextField(blank=True, db_column="Customize", null=True),
                ),
                (
                    "kit_cost",
                    models.BigIntegerField(blank=True, db_column="Kit Cost", null=True),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "variant_id",
                    models.TextField(blank=True, db_column="Variant ID", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_photos",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogPosters",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("buy", models.BigIntegerField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_posters",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogReactions",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "internal_id",
                    models.TextField(blank=True, db_column="Internal ID", null=True),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_reactions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogRecipes",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "field_1",
                    models.BigIntegerField(blank=True, db_column="#1", null=True),
                ),
                (
                    "material_1",
                    models.TextField(blank=True, db_column="Material 1", null=True),
                ),
                ("field_2", models.TextField(blank=True, db_column="#2", null=True)),
                (
                    "material_2",
                    models.TextField(blank=True, db_column="Material 2", null=True),
                ),
                ("field_3", models.TextField(blank=True, db_column="#3", null=True)),
                (
                    "material_3",
                    models.TextField(blank=True, db_column="Material 3", null=True),
                ),
                ("field_4", models.TextField(blank=True, db_column="#4", null=True)),
                (
                    "material_4",
                    models.TextField(blank=True, db_column="Material 4", null=True),
                ),
                ("field_5", models.TextField(blank=True, db_column="#5", null=True)),
                (
                    "material_5",
                    models.TextField(blank=True, db_column="Material 5", null=True),
                ),
                ("field_6", models.TextField(blank=True, db_column="#6", null=True)),
                (
                    "material_6",
                    models.TextField(blank=True, db_column="Material 6", null=True),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "recipes_to_unlock",
                    models.BigIntegerField(
                        blank=True, db_column="Recipes to Unlock", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "category",
                    models.TextField(blank=True, db_column="Category", null=True),
                ),
                (
                    "serial_id",
                    models.BigIntegerField(
                        blank=True, db_column="Serial ID", null=True
                    ),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_recipes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogRugs",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_rugs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogShoes",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_shoes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogSocks",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_socks",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogTools",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                (
                    "body_title",
                    models.TextField(blank=True, db_column="Body Title", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "customize",
                    models.TextField(blank=True, db_column="Customize", null=True),
                ),
                (
                    "kit_cost",
                    models.TextField(blank=True, db_column="Kit Cost", null=True),
                ),
                ("uses", models.TextField(blank=True, db_column="Uses", null=True)),
                (
                    "stack_size",
                    models.BigIntegerField(
                        blank=True, db_column="Stack Size", null=True
                    ),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("set", models.TextField(blank=True, db_column="Set", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "variant_id",
                    models.TextField(blank=True, db_column="Variant ID", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_tools",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogTops",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "seasonal_availability",
                    models.TextField(
                        blank=True, db_column="Seasonal Availability", null=True
                    ),
                ),
                (
                    "mannequin_piece",
                    models.TextField(
                        blank=True, db_column="Mannequin Piece", null=True
                    ),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                ("style", models.TextField(blank=True, db_column="Style", null=True)),
                (
                    "label_themes",
                    models.TextField(blank=True, db_column="Label Themes", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_tops",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogUmbrellas",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                (
                    "sell",
                    models.BigIntegerField(blank=True, db_column="Sell", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "villager_equippable",
                    models.TextField(
                        blank=True, db_column="Villager Equippable", null=True
                    ),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_umbrellas",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogVillagers",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "species",
                    models.TextField(blank=True, db_column="Species", null=True),
                ),
                ("gender", models.TextField(blank=True, db_column="Gender", null=True)),
                (
                    "personality",
                    models.TextField(blank=True, db_column="Personality", null=True),
                ),
                ("hobby", models.TextField(blank=True, db_column="Hobby", null=True)),
                (
                    "birthday",
                    models.TextField(blank=True, db_column="Birthday", null=True),
                ),
                (
                    "catchphrase",
                    models.TextField(blank=True, db_column="Catchphrase", null=True),
                ),
                (
                    "favorite_song",
                    models.TextField(blank=True, db_column="Favorite Song", null=True),
                ),
                (
                    "style_1",
                    models.TextField(blank=True, db_column="Style 1", null=True),
                ),
                (
                    "style_2",
                    models.TextField(blank=True, db_column="Style 2", null=True),
                ),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                (
                    "wallpaper",
                    models.TextField(blank=True, db_column="Wallpaper", null=True),
                ),
                (
                    "flooring",
                    models.TextField(blank=True, db_column="Flooring", null=True),
                ),
                (
                    "furniture_list",
                    models.TextField(blank=True, db_column="Furniture List", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_villagers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogWallMounted",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                (
                    "variation",
                    models.TextField(blank=True, db_column="Variation", null=True),
                ),
                (
                    "body_title",
                    models.TextField(blank=True, db_column="Body Title", null=True),
                ),
                (
                    "pattern",
                    models.TextField(blank=True, db_column="Pattern", null=True),
                ),
                (
                    "pattern_title",
                    models.TextField(blank=True, db_column="Pattern Title", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                (
                    "body_customize",
                    models.TextField(blank=True, db_column="Body Customize", null=True),
                ),
                (
                    "pattern_customize",
                    models.TextField(
                        blank=True, db_column="Pattern Customize", null=True
                    ),
                ),
                (
                    "kit_cost",
                    models.TextField(blank=True, db_column="Kit Cost", null=True),
                ),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                ("sell", models.TextField(blank=True, db_column="Sell", null=True)),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                ("size", models.TextField(blank=True, db_column="Size", null=True)),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                (
                    "hha_set",
                    models.TextField(blank=True, db_column="HHA Set", null=True),
                ),
                (
                    "interact",
                    models.TextField(blank=True, db_column="Interact", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "outdoor",
                    models.TextField(blank=True, db_column="Outdoor", null=True),
                ),
                (
                    "lighting_type",
                    models.TextField(blank=True, db_column="Lighting Type", null=True),
                ),
                (
                    "door_deco",
                    models.TextField(blank=True, db_column="Door Deco", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "variant_id",
                    models.TextField(blank=True, db_column="Variant ID", null=True),
                ),
                (
                    "internal_id",
                    models.TextField(blank=True, db_column="Internal ID", null=True),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_wall-mounted",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnimalCrossingNewHorizonCatalogWallpaper",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("vfx", models.TextField(blank=True, db_column="VFX", null=True)),
                (
                    "vfx_type",
                    models.TextField(blank=True, db_column="VFX Type", null=True),
                ),
                ("diy", models.TextField(blank=True, db_column="DIY", null=True)),
                ("buy", models.TextField(blank=True, db_column="Buy", null=True)),
                ("sell", models.TextField(blank=True, db_column="Sell", null=True)),
                (
                    "color_1",
                    models.TextField(blank=True, db_column="Color 1", null=True),
                ),
                (
                    "color_2",
                    models.TextField(blank=True, db_column="Color 2", null=True),
                ),
                (
                    "miles_price",
                    models.TextField(blank=True, db_column="Miles Price", null=True),
                ),
                ("source", models.TextField(blank=True, db_column="Source", null=True)),
                (
                    "source_notes",
                    models.TextField(blank=True, db_column="Source Notes", null=True),
                ),
                (
                    "catalog",
                    models.TextField(blank=True, db_column="Catalog", null=True),
                ),
                (
                    "window_type",
                    models.TextField(blank=True, db_column="Window Type", null=True),
                ),
                (
                    "window_color",
                    models.TextField(blank=True, db_column="Window Color", null=True),
                ),
                (
                    "pane_type",
                    models.TextField(blank=True, db_column="Pane Type", null=True),
                ),
                (
                    "curtain_type",
                    models.TextField(blank=True, db_column="Curtain Type", null=True),
                ),
                (
                    "curtain_color",
                    models.TextField(blank=True, db_column="Curtain Color", null=True),
                ),
                (
                    "ceiling_type",
                    models.TextField(blank=True, db_column="Ceiling Type", null=True),
                ),
                (
                    "hha_concept_1",
                    models.TextField(blank=True, db_column="HHA Concept 1", null=True),
                ),
                (
                    "hha_concept_2",
                    models.TextField(blank=True, db_column="HHA Concept 2", null=True),
                ),
                (
                    "hha_series",
                    models.TextField(blank=True, db_column="HHA Series", null=True),
                ),
                ("tag", models.TextField(blank=True, db_column="Tag", null=True)),
                (
                    "version",
                    models.TextField(blank=True, db_column="Version", null=True),
                ),
                (
                    "filename",
                    models.TextField(blank=True, db_column="Filename", null=True),
                ),
                (
                    "internal_id",
                    models.BigIntegerField(
                        blank=True, db_column="Internal ID", null=True
                    ),
                ),
                (
                    "unique_entry_id",
                    models.TextField(
                        blank=True, db_column="Unique Entry ID", null=True
                    ),
                ),
            ],
            options={
                "db_table": "animal_crossing_new_horizon_catalog_wallpaper",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codename", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=30)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
                ("last_name", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CharacterData",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("height", models.TextField(blank=True, null=True)),
                ("mass", models.TextField(blank=True, null=True)),
                ("skin_color", models.TextField(blank=True, null=True)),
                ("hair_color", models.TextField(blank=True, null=True)),
                ("birth_year", models.TextField(blank=True, null=True)),
                ("gender", models.TextField(blank=True, null=True)),
                ("homeworld", models.TextField(blank=True, null=True)),
                ("films", models.TextField(blank=True, null=True)),
                ("species", models.TextField(blank=True, null=True)),
                ("char_num", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "character_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("change_message", models.TextField()),
                ("action_flag", models.PositiveSmallIntegerField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NetflixTitles",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("show_id", models.TextField(blank=True, null=True)),
                ("type", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("director", models.TextField(blank=True, null=True)),
                ("cast", models.TextField(blank=True, null=True)),
                ("country", models.TextField(blank=True, null=True)),
                ("date_added", models.TextField(blank=True, null=True)),
                ("release_year", models.BigIntegerField(blank=True, null=True)),
                ("rating", models.TextField(blank=True, null=True)),
                ("duration", models.TextField(blank=True, null=True)),
                ("listed_in", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "netflix_titles",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SqlExamples",
            fields=[
                (
                    "index",
                    models.BigIntegerField(
                        blank=True, db_column="index", primary_key=True, serialize=False
                    ),
                ),
                (
                    "difficulty",
                    models.TextField(blank=True, db_column="Difficulty", null=True),
                ),
                (
                    "question",
                    models.TextField(blank=True, db_column="Question", null=True),
                ),
                (
                    "solution",
                    models.TextField(blank=True, db_column="Solution", null=True),
                ),
                (
                    "comments",
                    models.TextField(blank=True, db_column="Comments", null=True),
                ),
            ],
            options={
                "db_table": "sql_examples",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StarwarsFilms",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("title", models.TextField(blank=True, null=True)),
                ("episode_id", models.BigIntegerField(blank=True, null=True)),
                ("opening_crawl", models.TextField(blank=True, null=True)),
                ("director", models.TextField(blank=True, null=True)),
                ("producer", models.TextField(blank=True, null=True)),
                ("release_date", models.TextField(blank=True, null=True)),
                ("characters", models.TextField(blank=True, null=True)),
                ("planets", models.TextField(blank=True, null=True)),
                ("starships", models.TextField(blank=True, null=True)),
                ("vehicles", models.TextField(blank=True, null=True)),
                ("species", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "starwars_films",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StarwarsPlanets",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("rotation_period", models.TextField(blank=True, null=True)),
                ("orbital_period", models.TextField(blank=True, null=True)),
                ("diameter", models.TextField(blank=True, null=True)),
                ("climate", models.TextField(blank=True, null=True)),
                ("gravity", models.TextField(blank=True, null=True)),
                ("terrain", models.TextField(blank=True, null=True)),
                ("surface_water", models.TextField(blank=True, null=True)),
                ("population", models.TextField(blank=True, null=True)),
                ("residents", models.TextField(blank=True, null=True)),
                ("films", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "starwars_planets",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StarwarsSpecies",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("classification", models.TextField(blank=True, null=True)),
                ("designation", models.TextField(blank=True, null=True)),
                ("average_height", models.TextField(blank=True, null=True)),
                ("skin_colors", models.TextField(blank=True, null=True)),
                ("hair_colors", models.TextField(blank=True, null=True)),
                ("eye_colors", models.TextField(blank=True, null=True)),
                ("average_lifespan", models.TextField(blank=True, null=True)),
                ("homeworld", models.TextField(blank=True, null=True)),
                ("language", models.TextField(blank=True, null=True)),
                ("people", models.TextField(blank=True, null=True)),
                ("films", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "starwars_species",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StarwarsStarships",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("model", models.TextField(blank=True, null=True)),
                ("manufacturer", models.TextField(blank=True, null=True)),
                ("cost_in_credits", models.TextField(blank=True, null=True)),
                ("length", models.TextField(blank=True, null=True)),
                ("max_atmosphering_speed", models.TextField(blank=True, null=True)),
                ("crew", models.TextField(blank=True, null=True)),
                ("passengers", models.TextField(blank=True, null=True)),
                ("cargo_capacity", models.TextField(blank=True, null=True)),
                ("consumables", models.TextField(blank=True, null=True)),
                ("hyperdrive_rating", models.TextField(blank=True, null=True)),
                ("mglt", models.TextField(blank=True, db_column="MGLT", null=True)),
                ("starship_class", models.TextField(blank=True, null=True)),
                ("pilots", models.TextField(blank=True, null=True)),
                ("films", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "starwars_starships",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StarwarsVehicles",
            fields=[
                ("index", models.BigIntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("model", models.TextField(blank=True, null=True)),
                ("manufacturer", models.TextField(blank=True, null=True)),
                ("cost_in_credits", models.TextField(blank=True, null=True)),
                ("length", models.TextField(blank=True, null=True)),
                ("max_atmosphering_speed", models.TextField(blank=True, null=True)),
                ("crew", models.TextField(blank=True, null=True)),
                ("passengers", models.TextField(blank=True, null=True)),
                ("cargo_capacity", models.TextField(blank=True, null=True)),
                ("consumables", models.TextField(blank=True, null=True)),
                ("vehicle_class", models.TextField(blank=True, null=True)),
                ("pilots", models.TextField(blank=True, null=True)),
                ("films", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "starwars_vehicles",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StudentPerformance",
            fields=[
                ("gender", models.TextField(primary_key=True, serialize=False)),
                (
                    "race_ethnicity",
                    models.TextField(blank=True, db_column="race/ethnicity", null=True),
                ),
                (
                    "parental_level_of_education",
                    models.TextField(
                        blank=True, db_column="parental level of education", null=True
                    ),
                ),
                ("lunch", models.TextField(blank=True, null=True)),
                (
                    "test_preparation_course",
                    models.TextField(
                        blank=True, db_column="test preparation course", null=True
                    ),
                ),
                (
                    "math_score",
                    models.TextField(blank=True, db_column="math score", null=True),
                ),
                (
                    "reading_score",
                    models.TextField(blank=True, db_column="reading score", null=True),
                ),
                (
                    "writing_score",
                    models.TextField(blank=True, db_column="writing score", null=True),
                ),
            ],
            options={
                "db_table": "student_performance",
                "managed": False,
            },
        ),
    ]
